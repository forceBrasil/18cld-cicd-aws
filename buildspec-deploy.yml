version: 0.2
phases:
  install: 
    runtime-versions:
      docker: 18
    commands: 
      - apt-get update -y
      - apt-get install -y jq
      - terraformImage="hashicorp/terraform:0.11.14"
      - docker pull $terraformImage
      - PROJ_NAME="$PROJETCT_NAME"
      - mkdir terraform/.aws && aws s3 cp s3://18cld-teste-prod/test-devops-fiap/.aws/credentials terraform/.aws/ && aws s3 cp s3://18cld-teste-prod/test-devops-fiap/.aws/config terraform/.aws/
      - mkdir terraform/.ssh && aws s3 cp s3://18cld-teste-prod/test-devops-fiap/.ssh/fiap-18cld.pem terraform/.ssh/ 
  pre_build:
    commands:
      - login=$(aws ecr get-login)
      - login=$(echo $login | sed 's/-e none/ /g' | tee)
      - echo $login | bash
      - IMAGE_URI=$(cat imagedefinitions.json | jq '.[] .imageUri')
  build:
    commands:
      - cp imagedefinitions.json terraform/
      - cd terraform
      - dockerterraform="docker run --rm -w /app  -v $PWD:/app -v $PWD/.aws:/root/.aws -v $PWD/.ssh:/root/.ssh -e PROJ_NAME=$PROJ_NAME $terraformImage"
      - $dockerterraform init 
      - $dockerterraform workspace select $STAGE || $dockerterraform workspace new $STAGE
      - $dockerterraform destroy -var version=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8) -var stage=$(echo $STAGE) -auto-approve
      - $dockerterraform plan -var version=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8) -var stage=$(echo $STAGE)
      - $dockerterraform apply -var version=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8) -var stage=$(echo $STAGE) -auto-approve
  post_build:
    commands:
      - echo "DONE!!!!"
    
artifacts:
  files: 
    - imagedefinitions.json
